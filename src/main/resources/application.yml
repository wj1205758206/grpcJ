server:
  port: 8900
zookeeper:
  server: 127.0.0.1:2181
  namespace: grpc-zk             #zk连接认证 username:passwd
  sessionTimeoutMs: 60000     #会话超时时间(毫秒),连接断开后，其它客户端还能请到临时节点的时间(还受tickTime设置影响[2倍-20倍])
  connectionTimeoutMs: 5000   #连接创建超时时间(毫秒)
  maxRetries: 1               #最大重试次数
  baseSleepTimeMs: 1000       #初始sleep时间(毫秒)
grpc:
  server:
    host: 127.0.0.1
    port: 9099
  client:
    zkAddress: zk://127.0.0.1:2181
    keepAliveTime: 10
    keepAliveTimeout: 3
    keepAliveWithoutCalls: true
    loadBalancingPolicy: round_robin
    idleTimeout: 30
    maxRetryAttempts: 3
spring:
  kafka:
    producer:
      retries: 0 #若设置大于0的值，客户端会将发送失败的记录重新发送
      batch-size: 16384 #当将多个记录被发送到同一个分区时， Producer 将尝试将记录组合到更少的请求中。这有助于提升客户端和服务器端的性能。这个配置控制一个批次的默认大小（以字节为单位）。16384是缺省的配置,16k
      buffer-memory: 33554432 #Producer 用来缓冲等待被发送到服务器的记录的总字节数，33554432是缺省配置 32m
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer #关键字的序列化类
      value-serializer: com.example.grpcj.common.serializer.UserInfoSerializer
      acks: -1
      bootstrap-servers: 127.0.0.1:9092
    consumer:
      group-id: userInfoGroup
      enable-auto-commit: true
      auto-commit-interval: 100ms
      key-deserializer: org.apache.kafka.common.serialization.IntegerDeserializer
      value-deserializer: com.example.grpcj.common.serializer.UserInfoDeserializer
      auto-offset-reset: earliest
      bootstrap-servers: 127.0.0.1:9092
    bootstrap-servers: 127.0.0.1:9092
    listener:
      type: batch
constant:
  partitionNum: 8
  userInfoTopic: userInfoTopic